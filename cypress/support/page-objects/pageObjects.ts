// the class names used in the page object methods below are randomly generated by react and are not best practices to use as a way to locate elements. That why I added a page object model design to these tests. If the class names happen to change, I can easily just update the methods with the new class names below. In a perfect world, eveything I need to use to automate the application would have an aria-label or data-testid.

class PageObjects {
  static readonly BASE_URL = 'https://jsonplaceholder.typicode.com';
  static readonly ALL_POSTS_URL = `${PageObjects.BASE_URL}/posts`;
  static readonly FIRST_POST_URL = `${PageObjects.BASE_URL}/posts/1`;
  static readonly FIRST_POST_COMMENTS = `${PageObjects.BASE_URL}/posts/1/comments`;

  verifyCorrectAmountOfProductsAreVisible() {
    return cy
      .get('.sc-ebmerl-4')
      .invoke('text')
      .then((text) => {
        const productCount = Number(text.match(/\d+/)[0]);

        this.findProduct().should('have.length', productCount);
      });
  }

  findProduct() {
    return cy.get('.sc-124al1g-2');
  }

  findProductImage() {
    return cy.get('.sc-124al1g-1');
  }

  findProductTitle() {
    return cy.get('.sc-124al1g-4');
  }

  findProductPrice() {
    return cy.get('.sc-124al1g-6');
  }

  findFilterButton(availableSize: string) {
    return cy.get('.sc-bj2vay-1 label').filter((index, label) => {
      return label.textContent.trim() === availableSize;
    });
  }

  findAddToCartButton() {
    return cy.get('.sc-124al1g-0');
  }

  findProductTitleInCart() {
    return cy.get('.sc-11uohgb-2');
  }

  findCartIconInCart() {
    return cy.get('.sc-1h98xa9-3');
  }

  findQuanityOfProductInCart() {
    return cy.get('.sc-11uohgb-3');
  }

  findPriceOfProductInCart() {
    return cy.get('.sc-11uohgb-4');
  }

  findSubtotalInCart() {
    return cy.get('.sc-1h98xa9-9');
  }

  findAddQuantityButton() {
    return cy.get('.sc-11uohgb-6').last();
  }

  findRemoveQuantityButton() {
    return cy.get('.sc-11uohgb-6').first();
  }

  findRemoveProductFromCartButton() {
    return cy.get('[title="remove product from cart"]');
  }

  findProductInCart() {
    return cy.get('.sc-11uohgb-0');
  }

  getAllPosts() {
    return cy.api('GET', PageObjects.ALL_POSTS_URL);
  }

  getFirstPost() {
    return cy.api('GET', PageObjects.FIRST_POST_URL);
  }

  getFirstPostComments() {
    return cy.api('GET', PageObjects.FIRST_POST_COMMENTS);
  }

  deleteFirstPost() {
    return cy.api('DELETE', PageObjects.FIRST_POST_URL);
  }
}
export default PageObjects;
